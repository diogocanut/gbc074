# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: crud.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='crud.proto',
  package='helloworld',
  syntax='proto3',
  serialized_pb=_b('\n\ncrud.proto\x12\nhelloworld\":\n\x0e\x43ommandRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0b\n\x03key\x18\x02 \x01(\r\x12\r\n\x05value\x18\x03 \x01(\t\"\x1f\n\x0c\x43ommandReply\x12\x0f\n\x07message\x18\x01 \x01(\t2E\n\x03Map\x12>\n\x04\x43rud\x12\x1a.helloworld.CommandRequest\x1a\x18.helloworld.CommandReply\"\x00\x62\x06proto3')
)




_COMMANDREQUEST = _descriptor.Descriptor(
  name='CommandRequest',
  full_name='helloworld.CommandRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='helloworld.CommandRequest.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='key', full_name='helloworld.CommandRequest.key', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='helloworld.CommandRequest.value', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=26,
  serialized_end=84,
)


_COMMANDREPLY = _descriptor.Descriptor(
  name='CommandReply',
  full_name='helloworld.CommandReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='message', full_name='helloworld.CommandReply.message', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=86,
  serialized_end=117,
)

DESCRIPTOR.message_types_by_name['CommandRequest'] = _COMMANDREQUEST
DESCRIPTOR.message_types_by_name['CommandReply'] = _COMMANDREPLY
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

CommandRequest = _reflection.GeneratedProtocolMessageType('CommandRequest', (_message.Message,), dict(
  DESCRIPTOR = _COMMANDREQUEST,
  __module__ = 'crud_pb2'
  # @@protoc_insertion_point(class_scope:helloworld.CommandRequest)
  ))
_sym_db.RegisterMessage(CommandRequest)

CommandReply = _reflection.GeneratedProtocolMessageType('CommandReply', (_message.Message,), dict(
  DESCRIPTOR = _COMMANDREPLY,
  __module__ = 'crud_pb2'
  # @@protoc_insertion_point(class_scope:helloworld.CommandReply)
  ))
_sym_db.RegisterMessage(CommandReply)



_MAP = _descriptor.ServiceDescriptor(
  name='Map',
  full_name='helloworld.Map',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=119,
  serialized_end=188,
  methods=[
  _descriptor.MethodDescriptor(
    name='Crud',
    full_name='helloworld.Map.Crud',
    index=0,
    containing_service=None,
    input_type=_COMMANDREQUEST,
    output_type=_COMMANDREPLY,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_MAP)

DESCRIPTOR.services_by_name['Map'] = _MAP

# @@protoc_insertion_point(module_scope)
